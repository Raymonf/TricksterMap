<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CollisionFormTitle" xml:space="preserve">
    <value>Config Layer</value>
    <comment>{0} is the map filename</comment>
  </data>
  <data name="File" xml:space="preserve">
    <value>檔案</value>
    <comment>Menu name</comment>
  </data>
  <data name="FileExit" xml:space="preserve">
    <value>結束</value>
    <comment>Menu item (File &gt; Exit)</comment>
  </data>
  <data name="FileOpen" xml:space="preserve">
    <value>開啟檔案</value>
    <comment>Menu item (File &gt; Open)</comment>
  </data>
  <data name="GeneralNPC" xml:space="preserve">
    <value>NPC（一般）</value>
  </data>
  <data name="InvalidMapFileError" xml:space="preserve">
    <value>無效的Trickster地圖資源文件。</value>
    <comment>Used when the user specifies an invalid file.</comment>
  </data>
  <data name="MapID" xml:space="preserve">
    <value>地圖ID</value>
  </data>
  <data name="MonsterSpawnPoint" xml:space="preserve">
    <value>怪物孵化點
</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>無用</value>
  </data>
  <data name="NORIEntity" xml:space="preserve">
    <value>NORI 實體</value>
  </data>
  <data name="NotWalkable" xml:space="preserve">
    <value>不能通過的部分</value>
  </data>
  <data name="OpenType" xml:space="preserve">
    <value>Trickster地圖資源文件 (*.md3)</value>
    <comment>Open file type</comment>
  </data>
  <data name="RespawnLocation" xml:space="preserve">
    <value>重生點</value>
  </data>
  <data name="ShopNPC" xml:space="preserve">
    <value>NPC（商店）</value>
  </data>
  <data name="TeleportItemSpawn" xml:space="preserve">
    <value>傳送位置（物品）</value>
  </data>
  <data name="TeleportNPCSpawn" xml:space="preserve">
    <value>傳送位置（NPC）</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="Walkable" xml:space="preserve">
    <value>能通過的部分</value>
  </data>
  <data name="XPos" xml:space="preserve">
    <value>X位置</value>
  </data>
  <data name="YPos" xml:space="preserve">
    <value>Y位置</value>
  </data>
  <data name="UnknownType" xml:space="preserve">
    <value>未知類型（{0}）</value>
  </data>
  <data name="CollisionData" xml:space="preserve">
    <value>碰撞數據</value>
  </data>
  <data name="GroundType" xml:space="preserve">
    <value>土壤類型</value>
  </data>
  <data name="GvGSpawnRange" xml:space="preserve">
    <value>GvG生成區</value>
  </data>
  <data name="HeightData" xml:space="preserve">
    <value>高度數據</value>
  </data>
  <data name="MonsterGatherRange" xml:space="preserve">
    <value>怪物聚集範圍</value>
  </data>
  <data name="MonsterMovementRange" xml:space="preserve">
    <value>怪物移動範圍</value>
  </data>
  <data name="MonsterSpawnRange" xml:space="preserve">
    <value>怪物孵化區</value>
  </data>
  <data name="NPCMovementRange" xml:space="preserve">
    <value>NPC移動範圍</value>
  </data>
  <data name="Portal" xml:space="preserve">
    <value>傳送門</value>
  </data>
  <data name="PortalEntranceRange" xml:space="preserve">
    <value>進入傳送門範圍</value>
    <comment>The range in which a user can enter a portal from</comment>
  </data>
  <data name="PreferredFont" xml:space="preserve">
    <value>Microsoft JhengHei UI</value>
    <comment>Used for rendering text</comment>
  </data>
  <data name="SetDebris" xml:space="preserve">
    <value>等級要求</value>
    <comment>Erroneously named SetDebris; will check the PortalInfo table.</comment>
  </data>
  <data name="SkillNPC" xml:space="preserve">
    <value>NPC（技能商店）</value>
  </data>
  <data name="SpecialEffects" xml:space="preserve">
    <value>特殊效果</value>
  </data>
  <data name="XSize" xml:space="preserve">
    <value>X大小：{0}</value>
    <comment>X size, for the colliison data legend</comment>
  </data>
  <data name="YSize" xml:space="preserve">
    <value>Y大小：{0}</value>
    <comment>Y size, for the collision data legend</comment>
  </data>
  <data name="Create" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="CreatePointObject" xml:space="preserve">
    <value>新增 Point Object</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="EditPointObject" xml:space="preserve">
    <value>編輯 Point Object</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="MapControl" xml:space="preserve">
    <value>地圖控制（{0}）</value>
    <comment>{0} is the filename</comment>
  </data>
  <data name="NumOfNum" xml:space="preserve">
    <value>{1} 之 {0}</value>
  </data>
  <data name="PointObjectView" xml:space="preserve">
    <value>Point Object 數據</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>另存為...</value>
    <comment>Map control form button</comment>
  </data>
  <data name="TileView" xml:space="preserve">
    <value>平鋪顯示</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>語言</value>
  </data>
  <data name="RangeObjectView" xml:space="preserve">
    <value>Range Object 數據</value>
  </data>
  <data name="CreateRangeObject" xml:space="preserve">
    <value>新增 Range Object</value>
  </data>
  <data name="EditRangeObject" xml:space="preserve">
    <value>編輯 Range Object</value>
  </data>
  <data name="X1Pos" xml:space="preserve">
    <value>X1</value>
  </data>
  <data name="X2Pos" xml:space="preserve">
    <value>X2</value>
  </data>
  <data name="Y1Pos" xml:space="preserve">
    <value>Y1</value>
  </data>
  <data name="Y2Pos" xml:space="preserve">
    <value>Y2</value>
  </data>
</root>